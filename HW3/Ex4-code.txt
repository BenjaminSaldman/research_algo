import sys
import math
from queue import Queue

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.

# n: the total number of nodes in the level, including the gateways
# l: the number of links
# e: the number of exit gateways
visited=[]
neighbors={}
parent={}
target=[]
n, l, e = [int(i) for i in input().split()]
for i in range(n):
    neighbors[i]=[]
for i in range(l):
    # n1: N1 and N2 defines a link between these nodes
    n1, n2 = [int(j) for j in input().split()]
    neighbors[n1].append(n2)
    neighbors[n2].append(n1)
for i in range(e):
    ei = int(input())  # the index of a gateway node
    target.append(ei)
# game loop
while True:
    si = int(input())  # The index of the node on which the Bobnet agent is positioned this turn

    q = Queue()
    prev={}
    q.put(si)
    visited=[si]
    x=0
    while not q.empty():
        x=q.get()
        if x in target:
            break
        for y in neighbors[x]:
            if y not in visited:
                visited.append(y)
                q.put(y)
                prev[y] = x

    print(f"{x} {prev[x]}")
    # Write an action using print
    # To debug: print("Debug messages...", file=sys.stderr, flush=True)


    # Example: 0 1 are the indices of the nodes you wish to sever the link between

